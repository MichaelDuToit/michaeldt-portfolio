import Head from 'next/head';
import Link from 'next/link';
import { getProjects } from '@/configuration/markdown-utils';
import ProjectCard from '@/components/projectCard';

Home.useLandingPageNavigationBarStyle = true;

export default function Home({ projects }) {
  return (
    <>
      <Head>
        <title>Michael du Toit</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <div className="landingSplash splashAnimation">
          <h2 className='header'>Michael du Toit</h2>
          <h3>Full Stack Developer</h3>
          <div className="arrowContainer">
            <p className='downArrow'>&#10095;</p>
            <p className='downArrow'>&#10095;</p>
          </div>
        </div>
        <main>
          <section className='viewSection'>
            <h3>Hi! I'm Michael!</h3>
            <p>I am a Full Stack Developer who enjoys working across all technologies and platforms. Currently located in Wellington, New Zealand.<br/>         
            </p>
          </section>
          <section className='viewSection'>
            <h3 className='center-text mb-2'>Featured Projects:</h3>
            <ul className="projectCardContainer">
            {
                projects.sort((a, b) => orderProjects(a, b)).map((project) => (
                      <ProjectCard key={project.page}
                        url={`/projects/${project.page}`} 
                        project={project}
                        />
                ))
            }
            </ul>
            <Link href="/projects" className='center-text mt-2'>See More....</Link>
          </section>          
        </main>
      </div>
    </>
  )
}

export function getStaticProps()
{
    const projects = getProjects();

    return { props: { projects }}
}

export function orderProjects(a, b)
{
  let firstObjSortOrder = a.sortOrder != null ? a.sortOrder : 1000;
  let secondObjSortOrder = b.sortOrder != null ? b.sortOrder : 1000;

  // first we order by the SortOrder meta data.
  if(firstObjSortOrder < secondObjSortOrder)
  {
    return -1;
  }

  if(firstObjSortOrder > secondObjSortOrder)
  {
    return 1;
  }

  // if they have the same SortOrder, then sort alphabetically by the title
  let firstObjTitle = a.title != null ? a.title.toUpperCase() : "";
  let secondObjTitle = b.title != null ? b.title.toUpperCase() : "";

  if(firstObjTitle < secondObjTitle)
  {
    return -1;
  }

  if(firstObjTitle > secondObjTitle)
  {
    return 1;
  }

  return 0;
}